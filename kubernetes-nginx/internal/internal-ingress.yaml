apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: internal-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    # nginx.ingress.kubernetes.io/auth-url: https://peerprep.ml/api/user/jwt_validate # need to set this to some external service
    nginx.ingress.kubernetes.io/enable-cors: "true"
    # nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    # nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE"
    # nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,X-LANG,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Api-Key,X-Device-Id,Access-Control-Allow-Origin,Authorization"
    # nginx.ingress.kubernetes.io/auth-signin: https://peerprep.ml/login # route this to the login page
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "cs3219-g5-cookie"
    nginx.ingress.kubernetes.io/affinity-mode: "persistent"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    cert-manager.io/issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - peerprep-g5.ml
    secretName: quickstart-example-tls
  rules:
  - host: "peerprep-g5.ml"
    http:
      paths:
      - path: /api/questions
        pathType: Prefix
        backend:
          service:
            name: questions
            port: 
              number: 3000
      - path: /api/match
        pathType: Prefix
        backend:
          service:
            name: match
            port: 
              number: 3000
      - path: /api/chat
        pathType: Prefix
        backend:
          service:
            name: chat
            port: 
              number: 3000
      - path: /api/editor
        pathType: Prefix
        backend:
          service:
            name: text
            port: 
              number: 3000